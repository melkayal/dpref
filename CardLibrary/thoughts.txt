карточный стол.
У стола есть колода (CardDeck) и посадочные места.
На посадочном месте может быть игрок
Игрокам раздаются карты из колоды (по определенным правилам)
На столе делается ход (некое действие, предпринимаемое игроком). 
Текущий "начинатель" хода известен.
Ход определяет можно сделать то или иное действие или нельзя (пойти конкретной картой).
По окончании хода - результат (взятка у того-то, например)
Все это в рамках одной сдачи, сдач может быть много.


Сущности:
- Стол
  Предоставляет посадочные места и колоду
  Определяет (регистрирует) игроков
  Создает (инициирует) и обслуживает ход
  Ведет учет игры
  Создает сдачу
- Игра
  Правила игры
  Определяет будут ли еще сдачи
- Заказ (контракт)
  Сколько заказали
  Кто заказал
  Если никто - какая нынче игра (2-е распасы например)
- Колода
  Предоставляет карты
- Карты
  Имеет масть и достоинство
- Посадочное место
  Определяет очередность хода (ссылка на следующего ходящего?..)
- Игрок
  "Ходит" (добавляет карту в ход или пропускает)
  IPlayer - doTurn(move)
    Через move доступно 
      какие карты уже выложены в результате текущего хода
      допустим ли ход данной картой
      isAcceptable(Card, Player)
    
- Ход
  Содержит в себе "элементы хода" - карты
  Определяет какой картой можно ходить, а какой нет (на основании карт игрока и текущего состояния)
  Когда закончен - определяет результат (чья взятка)
- Сдача
  - Набор ходов
  - Определяет "козырь", определяет кто первый ходит
  - Определяет кто делает следующий ход на основании предыдущего
  - Определяет итоговый выигрыш сдачи (записи в пулю и пр.)



0.1. Table.registerPlayers
  Игроки на местах
0.2. Table.initGame
  ? Утверждены правила игры
  game = new Game
1. Table.initDeal
  Карты сданы
    Seat.addCard ...
  Есть объект Deal
    deal = new Deal
    deal.addSeats [с указанием кто после кого ходит]

2. Deal.performTrade
  trade = new Trade (game.restrictions) [типа вторых-третьих распасов, ...]
  while trade not finished
    trade.turn(seat)
      --> seat.bid [например, 6 пик, или пас]
    Определены правила сдачи. 
    Доторговываемся, открываем прикуп, сбрасываем карты, объявляем игру.

    showBoughtCards (seats)
    addBoughtToSeat(winnerSeat)

  trade is finished
    following attrs are set:
      trade.player
      trade.trump
      trade.contract
      trade.firstMove : Seat
  Кто играет, что играет, какие козыри (или никаких)
  Чей ход.
  deal.initMoves(trade)
    mover = trade.firstMove [кто ходит]
    trump = trade.trump

3. Deal.nextMove
  move = createEmptyMove 
  while (seats.hasMoreWoTurn)
    currentSeat.turn(move)
  move is closed
  [тут все сделали ход]
  deal.processDoneMove(move) (чья взятка, чей следующий ход)
    deal.mover = F(move)
    seat.addTrick .... (поняли кто взял взятку)

4. While makes sense (пока остались карты у игроков)
  Deal.nextMove

5. Table.processDeal (кто выиграл, кто проиграл и все такое)
  Текущий deal складывается в список сдач для текущей игры.
  Дополняется объект в котором ведем счет (пуля)
6. Table.checkGame
  Проверяем играем ли дальше

6. Table.initDeal
  if Table.game.goFurther
    process from step 1


